{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\alimo\\\\Documents\\\\Project\\\\nxttutorial\\\\components\\\\Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Prices = /*#__PURE__*/function (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  var _super = _createSuper(Prices);\n\n  function Prices() {\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _s = $RefreshSig$();\n\n      var list = '';\n\n      var Prices = function Prices() {\n        _s();\n\n        var _useState = useState('USD'),\n            _useState2 = _slicedToArray(_useState, 2),\n            currency = _useState2[0],\n            setCurrency = _useState2[1];\n\n        if (currency === 'USD') {\n          list = __jsx(\"li\", {\n            className: \"list-group-item\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 16\n            }\n          }, \"Bitcoin rate for \", _this2.props.bpi.USD.description, \":\", __jsx(\"span\", {\n            className: \"badge badge-primary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 21\n            }\n          }, _this2.props.bpi.USD.code), __jsx(\"strong\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 21\n            }\n          }, _this2.props.bpi.USD.rate));\n        } else if (currency === 'GBP') {\n          list = __jsx(\"li\", {\n            className: \"list-group-item\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 16\n            }\n          }, \"Bitcoin rate for \", _this2.props.bpi.GBP.description, \":\", __jsx(\"span\", {\n            className: \"badge badge-primary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }\n          }, _this2.props.bpi.GBP.code), __jsx(\"strong\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 21\n            }\n          }, _this2.props.bpi.GBP.rate));\n        } else if (currency === 'EUR') {\n          list = __jsx(\"li\", {\n            className: \"list-group-item\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 16\n            }\n          }, \"Bitcoin rate for \", _this2.props.bpi.EUR.description, \":\", __jsx(\"span\", {\n            className: \"badge badge-primary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }\n          }, _this2.props.bpi.EUR.code), __jsx(\"strong\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 21\n            }\n          }, _this2.props.bpi.EUR.rate));\n        }\n\n        return __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        }, __jsx(\"ul\", {\n          className: \"list-group\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }\n        }, list), __jsx(\"br\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        }), __jsx(\"select\", {\n          onChange: function onChange(e) {\n            return setCurency({\n              currency: e.target.value\n            });\n          },\n          className: \"form-control\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }, __jsx(\"option\", {\n          value: \"USD\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }\n        }, \"USD\"), __jsx(\"option\", {\n          value: \"GBP\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }\n        }, \"GBP\"), __jsx(\"option\", {\n          value: \"EUR\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        }, \"EUR\")));\n      };\n\n      _s(Prices, \"IMt9glJKuY0gCtznVFnjeGsjS3E=\");\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["C:/Users/alimo/Documents/Project/nxttutorial/components/Prices.js"],"names":["Prices","currency","list","useState","setCurrency","props","bpi","USD","description","code","rate","GBP","EUR","e","setCurency","target","value","React","Component"],"mappings":"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","sourcesContent":["class Prices extends React.Component {\r\n    state = {\r\n        currency: 'USD'\r\n    }\r\n    render() {\r\nlet list = '';\r\n\r\nconst Prices = () => {\r\n    const [currency, setCurrency] =  useState('USD')\r\n\r\n    if (currency === 'USD') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.USD.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>\r\n                    <strong>{this.props.bpi.USD.rate}</strong>\r\n                </li>\r\n    } else if (currency === 'GBP') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.GBP.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.GBP.code}</span>\r\n                    <strong>{this.props.bpi.GBP.rate}</strong>\r\n                </li>\r\n    } else if (currency === 'EUR') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.EUR.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.EUR.code}</span>\r\n                    <strong>{this.props.bpi.EUR.rate}</strong>\r\n                </li>\r\n    }\r\n    \r\n            return (\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    {list}\r\n                </ul>\r\n                <br/>\r\n                <select onChange={e => setCurency({currency: e.target.value})} className=\"form-control\">\r\n                    <option value=\"USD\">USD</option>\r\n                    <option value=\"GBP\">GBP</option>\r\n                    <option value=\"EUR\">EUR</option>\r\n                </select>\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Prices"]},"metadata":{},"sourceType":"module"}
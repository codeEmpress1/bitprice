{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\alimo\\\\Documents\\\\Project\\\\nxttutorial\\\\components\\\\Prices.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// class Prices extends React.Component {\n//     state = {\n//         currency: 'USD'\n//     }\n//     render() {\n// let list = '';\nimport { useState } from 'react';\n\nvar Prices = function Prices() {\n  _s();\n\n  var _useState = useState('USD'),\n      currency = _useState[0],\n      setCurrency = _useState[1];\n\n  var list = '';\n\n  if (currency === 'USD') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", _this.props.bpi.USD.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, _this.props.bpi.USD.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, _this.props.bpi.USD.rate));\n  } else if (currency === 'GBP') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", props.bpi.GBP.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, _this.props.bpi.GBP.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, _this.props.bpi.GBP.rate));\n  } else if (currency === 'EUR') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", props.bpi.EUR.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, _this.props.bpi.EUR.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, _this.props.bpi.EUR.rate));\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    className: \"list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, list), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return setCurrency({\n        currency: e.target.value\n      });\n    },\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    value: \"USD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"GBP\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"GBP\"), __jsx(\"option\", {\n    value: \"EUR\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"EUR\")));\n};\n\n_s(Prices, \"IMt9glJKuY0gCtznVFnjeGsjS3E=\");\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["C:/Users/alimo/Documents/Project/nxttutorial/components/Prices.js"],"names":["useState","Prices","currency","setCurrency","list","props","bpi","USD","description","code","rate","GBP","EUR","e","target","value"],"mappings":"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","sourcesContent":["// class Prices extends React.Component {\r\n//     state = {\r\n//         currency: 'USD'\r\n//     }\r\n//     render() {\r\n// let list = '';\r\nimport { useState } from 'react';\r\n\r\nconst Prices = () => {\r\n    const [currency, setCurrency] =  useState('USD')\r\n    let list = ''\r\n    if (currency === 'USD') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.USD.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>\r\n                    <strong>{this.props.bpi.USD.rate}</strong>\r\n                </li>\r\n    } else if (currency === 'GBP') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {props.bpi.GBP.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.GBP.code}</span>\r\n                    <strong>{this.props.bpi.GBP.rate}</strong>\r\n                </li>\r\n    } else if (currency === 'EUR') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {props.bpi.EUR.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.EUR.code}</span>\r\n                    <strong>{this.props.bpi.EUR.rate}</strong>\r\n                </li>\r\n    }\r\n    \r\n            return (\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    {list}\r\n                </ul>\r\n                <br/>\r\n                <select onChange={e => setCurrency({currency: e.target.value})} className=\"form-control\">\r\n                    <option value=\"USD\">USD</option>\r\n                    <option value=\"GBP\">GBP</option>\r\n                    <option value=\"EUR\">EUR</option>\r\n                </select>\r\n            </div>)\r\n        \r\n    }\r\n\r\n\r\n\r\nexport default Prices"]},"metadata":{},"sourceType":"module"}
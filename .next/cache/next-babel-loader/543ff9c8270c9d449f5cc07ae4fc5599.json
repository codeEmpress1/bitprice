{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\alimo\\\\Documents\\\\Project\\\\nxttutorial\\\\components\\\\Prices.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// class Prices extends React.Component {\n//     state = {\n//         currency: 'USD'\n//     }\n//     render() {\n// let list = '';\nimport { useState } from 'react';\n\nvar Prices = function Prices(props) {\n  _s();\n\n  var _useState = useState(),\n      currency = _useState[0],\n      setCurrency = _useState[1];\n\n  var list = '';\n\n  if (currency === 'USD') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", props.bpi.USD.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, props.bpi.USD.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, props.bpi.USD.rate));\n  } else if (currency === 'GBP') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", props.bpi.GBP.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, props.bpi.GBP.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, props.bpi.GBP.rate));\n  } else if (currency === 'EUR') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", props.bpi.EUR.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, props.bpi.EUR.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, props.bpi.EUR.rate));\n  } // console.log(currency)\n\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    className: \"list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, list), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return setCurrency({\n        currency: e.target.value\n      });\n    },\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"USD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"GBP\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"GBP\"), __jsx(\"option\", {\n    value: \"EUR\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"EUR\")));\n};\n\n_s(Prices, \"PvazPi/xejF1GcFXkPW8pddHQhE=\");\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["C:/Users/alimo/Documents/Project/nxttutorial/components/Prices.js"],"names":["useState","Prices","props","currency","setCurrency","list","bpi","USD","description","code","rate","GBP","EUR","e","target","value"],"mappings":"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","sourcesContent":["// class Prices extends React.Component {\r\n//     state = {\r\n//         currency: 'USD'\r\n//     }\r\n//     render() {\r\n// let list = '';\r\nimport { useState } from 'react';\r\n\r\nconst Prices = (props) => {\r\n    const [currency, setCurrency] =  useState(\r\n        // {currency: 'USD'}\r\n    )\r\n    let list = ''\r\n    if (currency === 'USD') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {props.bpi.USD.description}:\r\n                    <span className=\"badge badge-primary\">{props.bpi.USD.code}</span>\r\n                    <strong>{props.bpi.USD.rate}</strong>\r\n                </li>\r\n    } else if (currency === 'GBP') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {props.bpi.GBP.description}:\r\n                    <span className=\"badge badge-primary\">{props.bpi.GBP.code}</span>\r\n                    <strong>{props.bpi.GBP.rate}</strong>\r\n                </li>\r\n    } else if (currency === 'EUR') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {props.bpi.EUR.description}:\r\n                    <span className=\"badge badge-primary\">{props.bpi.EUR.code}</span>\r\n                    <strong>{props.bpi.EUR.rate}</strong>\r\n                </li>\r\n    }\r\n        // console.log(currency)\r\n        return (\r\n\r\n        <div>\r\n            <ul className=\"list-group\">\r\n                {list}\r\n            </ul>\r\n            <br/>\r\n            <select \r\n            onChange={e => setCurrency({currency: e.target.value})} className=\"form-control\"\r\n            >\r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"GBP\">GBP</option>\r\n                <option value=\"EUR\">EUR</option>\r\n            </select>\r\n        </div>)\r\n        \r\n    }\r\n\r\n\r\n\r\nexport default Prices"]},"metadata":{},"sourceType":"module"}
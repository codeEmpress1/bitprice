{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alimo\\\\Documents\\\\Project\\\\nxttutorial\\\\components\\\\Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Prices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currency: 'USD'\n    });\n  }\n\n  render() {\n    let list = '';\n\n    const Prices = () => {\n      const [currency, setCurrency] = useState('USD');\n\n      if (currency === 'USD') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 16\n          }\n        }, \"Bitcoin rate for \", this.props.bpi.USD.description, \":\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }\n        }, this.props.bpi.USD.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }\n        }, this.props.bpi.USD.rate));\n      } else if (this.state.currency === 'GBP') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 16\n          }\n        }, \"Bitcoin rate for \", this.props.bpi.GBP.description, \":\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }\n        }, this.props.bpi.GBP.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }\n        }, this.props.bpi.GBP.rate));\n      } else if (this.state.currency === 'EUR') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 16\n          }\n        }, \"Bitcoin rate for \", this.props.bpi.EUR.description, \":\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        }, this.props.bpi.EUR.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, this.props.bpi.EUR.rate));\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, list), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }), __jsx(\"select\", {\n        onChange: e => this.setState({\n          currency: e.target.value\n        }),\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, __jsx(\"option\", {\n        value: \"USD\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"USD\"), __jsx(\"option\", {\n        value: \"GBP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"GBP\"), __jsx(\"option\", {\n        value: \"EUR\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"EUR\")));\n    };\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["C:/Users/alimo/Documents/Project/nxttutorial/components/Prices.js"],"names":["Prices","React","Component","currency","render","list","setCurrency","useState","props","bpi","USD","description","code","rate","state","GBP","EUR","e","setState","target","value"],"mappings":"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","sourcesContent":["class Prices extends React.Component {\r\n    state = {\r\n        currency: 'USD'\r\n    }\r\n    render() {\r\nlet list = '';\r\n\r\nconst Prices = () => {\r\n    const [currency, setCurrency] =  useState('USD')\r\n\r\n    if (currency === 'USD') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.USD.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>\r\n                    <strong>{this.props.bpi.USD.rate}</strong>\r\n                </li>\r\n    } else if (this.state.currency === 'GBP') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.GBP.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.GBP.code}</span>\r\n                    <strong>{this.props.bpi.GBP.rate}</strong>\r\n                </li>\r\n    } else if (this.state.currency === 'EUR') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.EUR.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.EUR.code}</span>\r\n                    <strong>{this.props.bpi.EUR.rate}</strong>\r\n                </li>\r\n    }\r\n    \r\n            return (\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    {list}\r\n                </ul>\r\n                <br/>\r\n                <select onChange={e => this.setState({currency: e.target.value})} className=\"form-control\">\r\n                    <option value=\"USD\">USD</option>\r\n                    <option value=\"GBP\">GBP</option>\r\n                    <option value=\"EUR\">EUR</option>\r\n                </select>\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Prices"]},"metadata":{},"sourceType":"module"}
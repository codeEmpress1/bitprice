{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alimo\\\\Documents\\\\Project\\\\nxttutorial\\\\components\\\\Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n// class Prices extends React.Component {\n//     state = {\n//         currency: 'USD'\n//     }\n//     render() {\n// let list = '';\nconst Prices = () => {\n  const [currency, setCurrency] = useState('USD');\n  let list = '';\n\n  if (currency === 'USD') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", this.props.bpi.USD.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    }, this.props.bpi.USD.code), __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, this.props.bpi.USD.rate));\n  } else if (currency === 'GBP') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", this.props.bpi.GBP.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, this.props.bpi.GBP.code), __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, this.props.bpi.GBP.rate));\n  } else if (currency === 'EUR') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", this.props.bpi.EUR.description, \":\", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, this.props.bpi.EUR.code), __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, this.props.bpi.EUR.rate));\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, list), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), __jsx(\"select\", {\n    onChange: e => setCurrency({\n      currency: e.target.value\n    }),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    value: \"USD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"GBP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"GBP\"), __jsx(\"option\", {\n    value: \"EUR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"EUR\")));\n};\n\nexport default Prices;","map":{"version":3,"sources":["C:/Users/alimo/Documents/Project/nxttutorial/components/Prices.js"],"names":["Prices","currency","setCurrency","useState","list","props","bpi","USD","description","code","rate","GBP","EUR","e","target","value"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA2BC,QAAQ,CAAC,KAAD,CAAzC;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAIH,QAAQ,KAAK,KAAjB,EAAwB;AACpBG,IAAAA,IAAI,GAAG;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACuB,KAAKC,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,WAD1C,OAEK;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBE,IAA1D,CAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBG,IAA5B,CAHL,CAAP;AAKH,GAND,MAMO,IAAIT,QAAQ,KAAK,KAAjB,EAAwB;AAC3BG,IAAAA,IAAI,GAAG;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACuB,KAAKC,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBH,WAD1C,OAEK;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBF,IAA1D,CAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBD,IAA5B,CAHL,CAAP;AAKH,GANM,MAMA,IAAIT,QAAQ,KAAK,KAAjB,EAAwB;AAC3BG,IAAAA,IAAI,GAAG;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACuB,KAAKC,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBJ,WAD1C,OAEK;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBH,IAA1D,CAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBF,IAA5B,CAHL,CAAP;AAKH;;AAEO,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAQ,IAAA,QAAQ,EAAES,CAAC,IAAIX,WAAW,CAAC;AAACD,MAAAA,QAAQ,EAAEY,CAAC,CAACC,MAAF,CAASC;AAApB,KAAD,CAAlC;AAAgE,IAAA,SAAS,EAAC,cAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CALJ,CADA;AAaP,CApCL;;AAwCA,eAAef,MAAf","sourcesContent":["// class Prices extends React.Component {\r\n//     state = {\r\n//         currency: 'USD'\r\n//     }\r\n//     render() {\r\n// let list = '';\r\n\r\nconst Prices = () => {\r\n    const [currency, setCurrency] =  useState('USD')\r\n    let list = ''\r\n    if (currency === 'USD') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.USD.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>\r\n                    <strong>{this.props.bpi.USD.rate}</strong>\r\n                </li>\r\n    } else if (currency === 'GBP') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.GBP.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.GBP.code}</span>\r\n                    <strong>{this.props.bpi.GBP.rate}</strong>\r\n                </li>\r\n    } else if (currency === 'EUR') {\r\n        list = <li className=\"list-group-item\">\r\n                    Bitcoin rate for {this.props.bpi.EUR.description}:\r\n                    <span className=\"badge badge-primary\">{this.props.bpi.EUR.code}</span>\r\n                    <strong>{this.props.bpi.EUR.rate}</strong>\r\n                </li>\r\n    }\r\n    \r\n            return (\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    {list}\r\n                </ul>\r\n                <br/>\r\n                <select onChange={e => setCurrency({currency: e.target.value})} className=\"form-control\">\r\n                    <option value=\"USD\">USD</option>\r\n                    <option value=\"GBP\">GBP</option>\r\n                    <option value=\"EUR\">EUR</option>\r\n                </select>\r\n            </div>)\r\n        \r\n    }\r\n\r\n\r\n\r\nexport default Prices"]},"metadata":{},"sourceType":"module"}